{
    "collab_server" : "",
    "contents" : "#TG 21.10.2014 file to analyse weightsd and signal data of TMS probe to estimate transferfunction\n#modified: 03.07.2015 TG\n#modified: 17.07.2015 TG\n#modified: 21.09.2015 TG\n\n# clear workspace\nrm(list=ls()); gc()\n\n\n#path <- \"d:/Lolly/data/portugal_Jose\"\n#path <- \"d:/sensors/Lolly/data/portugal_Jose\"\npath <- \"~/boxup/whk_echse/tms_portugal\"\n\nsetwd(path)\nFILES <- dir(path = path, pattern = \"^da.*.csv$\")\n#compose files\nfor (i in 1:length(FILES))\n{\n  D <- read.table(FILES[i], header = F, sep = \";\")\n  if (dim(D)[1] > 1)\n  {\n    D[,2] <- as.POSIXct(D[,2], format=\"%Y.%m.%d %H:%M\", tz = \"GMT\")\n    \n    if (i == 1)\n    {\n      data <- D\n    } else\n    {\n      X <- which(data[length(data[,2]),2]  < D[,2])\n      data <- rbind(data, D[X,])\n    }\n    \n  }\n}\nstr(data)\ndim(data)\nnames(data) <- c(\"Nr\", \"date\", \"X\", \"T1\", \"T2\", \"T3\", \"SM\", \"Y\", \"Z\")\n\nplot(data$date, data$T1, type=\"l\", xlab=\"time\", ylab=\"Temperature [?C]\", main = \"TMS data\")\nlines(data$date, data$T2, col = \"red\", lty = 3)\nlines(data$date, data$T3, col = \"pink\", lty = 4)\n\nplot(data$date, data$SM, type=\"l\", xlab=\"time\", ylab=\"SM [TMS]\", main = \"TMS data\")\n\nX <- which(as.POSIXct(\"29.04.2015 15:00\", format=\"%d.%m.%Y %H:%M\", tz = \"GMT\") <= data$date)[1]\nY <- which(as.POSIXct(\"19.09.2015 11:00\", format=\"%d.%m.%Y %H:%M\", tz = \"GMT\") <= data$date)\nY <- Y[1]\nplot(data$date[X:Y], data$T1[X:Y], type=\"l\", xlab=\"time\", ylab=\"Temperature [?C]\", main = \"TMS data\", ylim = (c(min(data[,4:6]), max(data[,4:6]))))\nlines(data$date[X:Y], data$T2[X:Y], col = \"firebrick3\", lty = 3)\nlines(data$date[X:Y], data$T3[X:Y], col = \"lightskyblue2\", lty = 4)\n\ndata$T1[data$T1 < -7] <- NA\ndata$T2[data$T2 < -7 | data$T2 > 30] <- NA\ndata$T3[data$T3 < -7 | data$T3 > 30] <- NA\n\n\nplot(data$date[X:Y], data$T1[X:Y], type=\"l\", xlab=\"time\", ylab=\"Temperature [?C]\", main = \"TMS data\", ylim = (c(min(data[,4:6], na.rm = TRUE), max(data[,4:6], na.rm = TRUE))))\nlines(data$date[X:Y], data$T2[X:Y], col = \"firebrick3\", lty = 3)\nlines(data$date[X:Y], data$T3[X:Y], col = \"lightskyblue2\", lty = 4)\n\n\nplot(data$date[X:Y], data$SM[X:Y], type=\"l\", xlab=\"time\", ylab=\"SM [TMS]\", main = \"TMS data\")\n\ngmt <- -2*3600 #remove local time and summer time\nWEIGHT <- read.table(\"weights.txt\", skip = 14, sep  = \"\\t\")\nnames(WEIGHT) <- c(\"date\", \"weight\")\nWEIGHT$date <- as.POSIXct(WEIGHT$date, format = \"%d.%m.%Y %H:%M\", tz = \"GMT\")+ gmt\n#flower pot coaster, bottle, probe TMS 93131942\ndev <- 40.8+46.89+122.35\n#soil not abolute dry value not reliable\nS <- 826.25 - dev + 100 +40.8\n\n#Volume of bottle\n#dyameter in cm\ndym <- 7.5\nDEPTH <- 11.5 #in cm\nVOL <- 3.14159265359 * (dym/2)^2 * DEPTH #in qcm\n\n#weight of soil and water in g\nWEIGHT$SOIL_water <- WEIGHT$weight - dev\n#dry soil in g -10 g bonus\nSOIL <- WEIGHT$SOIL_water[length(WEIGHT$SOIL_water)] -10\n#bulk density in g/qcm\nDs <- SOIL/VOL\n#weight water\nWEIGHT$WATER <- WEIGHT$SOIL_water- SOIL\n#starting volume of water\nWATER <- WEIGHT$WATER[1]\n#gravimetric soil moisture g/g\nWEIGHT$gSM <- WEIGHT$WATER / SOIL\n\nPORO <- WATER / SOIL # g/g\nPORO2 <- 1- Ds/2.648 #m?/m? with density of silicia\nPORO3 <- PORO2 / Ds # g/g\n#volumetric soil moisture m?/m?\nWEIGHT$SM <- WEIGHT$gSM * Ds\n\nplot(WEIGHT$date, WEIGHT$weight, xlab = \"Time\", ylab = \"Weight of sample [g]\")\nplot(WEIGHT$date, WEIGHT$SOIL_water, xlab = \"Time\", ylab = \"Weight of soil and water in sample [g]\")\nplot(WEIGHT$date, WEIGHT$WATER, xlab = \"Time\", ylab = \"Weight of water in the sample [g]\")\nplot(WEIGHT$date, WEIGHT$SM*100, xlab = \"Time\", ylab = \"Soil Moisture [%]\")\n\nWEIGHT$SOIL_water[length(WEIGHT$SOIL_water)]\n\n#extract data points of logger at which weight was measured\nx <- c()\nfor (i in 1:length(WEIGHT$date))\n{\n  x[i] <- which((as.numeric(data$date - WEIGHT$date[i]))^2 == min(as.numeric(data$date - WEIGHT$date[i])^2))\n}\n\nplot(data$SM[x], WEIGHT$weight, ylab = \"Weight sample [g]\", xlab = \"TMS signal [-]\")\nplot(data$SM[x], WEIGHT$SM, ylab = \"vol. Soil Moisture [m?/m?]\", xlab = \"TMS signal [-]\")\n#TMS standard polynom with standard parametrisation\ndata$SM2 <- (0.000000000009*data$SM^4-0.0000000382*data$SM^3+0.0001*data$SM^2-0.1168*data$SM+42.407)\nplot(data$SM2[x], WEIGHT$SM*100, ylab = \"Weight sample [g]\", xlab = \"TMS SM [m?/m?]\")\n\n#linear model\nmod <- lm(WEIGHT$SM ~ data$SM[x])\nmod$coefficients\nsummary(mod)\nupper <- data$SM[x] * (mod$coefficients[2] + coef(summary(mod))[, \"Std. Error\"][2]) + mod$coefficients[1] + coef(summary(mod))[, \"Std. Error\"][1]\nlower <- data$SM[x] * (mod$coefficients[2] - coef(summary(mod))[, \"Std. Error\"][2]) + mod$coefficients[1] - coef(summary(mod))[, \"Std. Error\"][1]\n\nplot(data$SM[x], WEIGHT$SM)\nlines(data$SM[x], data$SM[x] *mod$coefficients[2] + mod$coefficients[1], col = \"tomato2\")\nlines(data$SM[x], data$SM[x] * (mod$coefficients[2] + coef(summary(mod))[, \"Std. Error\"][2]) + mod$coefficients[1] + coef(summary(mod))[, \"Std. Error\"][1], col = \"dodgerblue2\")\nlines(data$SM[x], data$SM[x] * (mod$coefficients[2] - coef(summary(mod))[, \"Std. Error\"][2]) + mod$coefficients[1] - coef(summary(mod))[, \"Std. Error\"][1], col = \"dodgerblue2\")\nr <- 250/256\ng <-83/256\nb <- 62/256\npolygon(c(data$SM[x], rev(data$SM[x])), c(lower, rev(upper)),  col=rgb(r,g,b,0.3), border=NA)\n\n#polynom model\nTMS <- data$SM[x]\nSM <- WEIGHT$SM\nnlmod <- nls(SM ~ a * TMS^2 + b * TMS +c, trace = TRUE, start = list(a = 1e-8, b = 1E-4, c = -1E-3))\nsummary(nlmod)\nPARA <- summary(nlmod)\n\nPARA$parameters[,\"Estimate\"][1]\nupper2 <- data$SM[x]^2 * (PARA$parameters[,\"Estimate\"][1] + coef(summary(nlmod))[, \"Std. Error\"][1]) + data$SM[x] * (PARA$parameters[,\"Estimate\"][2] + coef(summary(nlmod))[, \"Std. Error\"][2]) + (PARA$parameters[,\"Estimate\"][3] + coef(summary(nlmod))[, \"Std. Error\"][3])\nlower2 <- data$SM[x]^2 * (PARA$parameters[,\"Estimate\"][1] - coef(summary(nlmod))[, \"Std. Error\"][1]) + data$SM[x] * (PARA$parameters[,\"Estimate\"][2] - coef(summary(nlmod))[, \"Std. Error\"][2]) + (PARA$parameters[,\"Estimate\"][3] - coef(summary(nlmod))[, \"Std. Error\"][3])\n\n\nlines(data$SM[x], data$SM[x]^2 *PARA$parameters[,\"Estimate\"][1] + data$SM[x] * PARA$parameters[,\"Estimate\"][2] + PARA$parameters[,\"Estimate\"][3], col = \"darkolivegreen2\", lwd = 2, lty = 3)\npolygon(c(data$SM[x], rev(data$SM[x])), c(lower2, rev(upper2)),  col=rgb(r,g,b,0.3), border=NA)\n\n# polynom with same amounts of degrees of freedom like TMS has provided\nnlmod2 <- nls(SM ~ a * TMS^4 + b * TMS^3 + c * TMS^2 + d * TMS + e, trace = TRUE, start = list(a = -1e-14, b = 1E-10, c = -1E-7, d = 1E-4, e = -1E-1))\nsummary(nlmod2)\nPARA2 <- summary(nlmod2)\n\nPARA2$parameters[,\"Estimate\"][1]\nupper3 <- data$SM[x]^4 * (PARA2$parameters[,\"Estimate\"][1] + coef(summary(nlmod2))[, \"Std. Error\"][1]) + data$SM[x]^3 * (PARA2$parameters[,\"Estimate\"][2] + coef(summary(nlmod2))[, \"Std. Error\"][2]) + data$SM[x]^2 * (PARA2$parameters[,\"Estimate\"][3] + coef(summary(nlmod2))[, \"Std. Error\"][3]) + data$SM[x] * (PARA2$parameters[,\"Estimate\"][4] + coef(summary(nlmod2))[, \"Std. Error\"][4]) + (PARA2$parameters[,\"Estimate\"][5] + coef(summary(nlmod2))[, \"Std. Error\"][5])\nlower3 <- data$SM[x]^4 * (PARA2$parameters[,\"Estimate\"][1] - coef(summary(nlmod2))[, \"Std. Error\"][1]) + data$SM[x]^3 * (PARA2$parameters[,\"Estimate\"][2] - coef(summary(nlmod2))[, \"Std. Error\"][2]) + data$SM[x]^2 * (PARA2$parameters[,\"Estimate\"][3] - coef(summary(nlmod2))[, \"Std. Error\"][3]) + data$SM[x] * (PARA2$parameters[,\"Estimate\"][4] - coef(summary(nlmod2))[, \"Std. Error\"][4]) + (PARA2$parameters[,\"Estimate\"][5] - coef(summary(nlmod2))[, \"Std. Error\"][5])\n\nlines(data$SM[x], data$SM[x]^4 *PARA2$parameters[,\"Estimate\"][1] + data$SM[x]^3 * PARA2$parameters[,\"Estimate\"][2] + data$SM[x]^2 * PARA2$parameters[,\"Estimate\"][3] + data$SM[x] * PARA2$parameters[,\"Estimate\"][4] + PARA2$parameters[,\"Estimate\"][5], col = \"blue\", lwd = 2, lty = 4)\npolygon(c(data$SM[x], rev(data$SM[x])), c(lower3, rev(upper3)),  col=rgb(r,g,b,0.3), border=NA)\n\nplot(data$SM[x], WEIGHT$SM, ylim = c(-1,1))\nlines(data$SM[x], data$SM[x]^4 *PARA2$parameters[,\"Estimate\"][1] + data$SM[x]^3 * PARA2$parameters[,\"Estimate\"][2] + data$SM[x]^2 * PARA2$parameters[,\"Estimate\"][3] + data$SM[x] * PARA2$parameters[,\"Estimate\"][4] + PARA2$parameters[,\"Estimate\"][5], col = \"blue\", lwd = 2, lty = 4)\npolygon(c(data$SM[x], rev(data$SM[x])), c(lower3, rev(upper3)),  col=rgb(r,g,b,0.3), border=NA)\n",
    "created" : 1474285441200.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2079952023",
    "id" : "5A6177DF",
    "lastKnownWriteTime" : 1475254171,
    "last_content_update" : 1475254171130,
    "path" : "~/boxup/whk_echse/tms_portugal/read.lolly.r",
    "project_path" : "tms_portugal/read.lolly.r",
    "properties" : {
    },
    "relative_order" : 2,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}