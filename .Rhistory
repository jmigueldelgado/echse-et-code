rm(list=ls())
assign("last.warning", NULL, envir=baseenv())
Sys.setenv(TZ="UTC")
output <- "evap"  # [evap, glorad, gloradmax, rad_net, radex, soilheat]
field.station <- "HS"  # [HS, NSA]
et.choice <- "eta"  # potential or actual evapotranspiration [etp, eta]
et.choice[2] <- 13  # model [1=Makk, 11=PM, 12=FAO, 13=SW]
wc.new <- T  # logical: Shall the newly calculated soil moisture data be used?
if (output %in% c("gloradmax", "rad_net", "radex")) {
tstart <- "2014-04-29 22:00:00"
tend <- "2014-07-01 05:00:00"
} else if (field.station == "HS") {
tstart <- "2014-06-26 18:00:00"; tend <- "2014-07-01 05:00:00"
} else {
tstart <- "2014-05-13 23:00:00"; tend <- "2014-05-20 19:00:00"
}
no.na <- T
if (output %in% c("gloradmax", "rad_net", "radex"))
no.na <- F
A <- list(alb=1,
apress=1,
cano_height=1,
cloud=0,
doy=1,
glorad=1,
glorad_max=0,
hour=1,
lai=1,
rad_long=0,
rad_net=1,
rad_net_soil=0,
radex=0,
rhum=1,
soilheat=1,
sundur=0,
temp_max=0,
temp_min=0,
temper=1,
totalheat=0,
utc_add=1,
wc_vol_root=1,
wc_vol_top=1,
wind=1)
locs <- list(field.station,  # alb
"Met",  # apress
field.station,  # cano_height
"any",  # cloud, not actually used
"any",  # doy
"Met",  # glorad
"any",  # glorad_max
"any",  # hour
field.station,  # lai
"any",  # rad_long
field.station,  # rad_net
"any",  # rad_net_soil
"any",  # radex
"Met",  # rhum
field.station,  # soilheat
"Met",  # sundur
"any",  # temp_max
"any",  # temp_min
field.station,  # temper
"any",  # totalheat
"any",  # utc_add
field.station,  # wc_vol_root
field.station,  # wc_vol_top
field.station)  # wind
if (system("hostname", intern=T) == "raspberrypi") {
setwd("/home/pi/ownCloud/whk_echse")
} else {
setwd("/home/julius/boxup/whk_echse")
}
source("~/R/jufun.R")  # CheckPack()
source("echseCtrl.R")  # control files
source("echseInput.R")  # data input files
source("echseParEst.R")  # parameter estimation
source("echsePost.R")  # postprocessing
source("echsePre.R")  # preprocessing
CheckPack(c("MASS", "RAtmosphere", "soilwaterptf", "TTR", "xtable", "xts"))
library(MASS)  # write.matrix()
library(soilwaterptf)
library(xtable)  # latex tables
library(xts)  # time series handling
load("data/portugal/meteo_HS.Rdata")
y
n
mean(5)
"blabla"
head(cars)
exit
exit
0
n
n
n
library(MASS)
write.matrix(NA, 3, 3)
install.packages(/home/pi/xtable_1.8-2.tar.gz, repos=NULL, type="source")
install.packages("/home/pi/xtable_1.8-2.tar.gz", repos=NULL, type="source")
install.packages("/home/pi/xtable_1.8-2.tar.gz", repos=NULL, type="source")
install.packages("/home/pi/R_HOME/xtable_1.8-2.tar.gz", repos=NULL, type="source")
library(xtable)
install.packages("/home/pi/R_HOME/xts_0.9-7.tar.gz", repos=NULL, type="source")
install.packages("/home/pi/R_HOME/zoo_1.8-0.tar.gz", repos=NULL, type="source")
install.packages("/home/pi/R_HOME/xts_0.9-7.tar.gz", repos=NULL, type="source")
library(xts)
n
install.packages("~/R_HOME/RAtmosphere_1.1.tar.gz", repos=NULL, type="source")
install.packages("~/R_HOME/TTR_0.23-1.tar.gz", repos=NULL, type="source")
n
